name: CI/CD Pipeline with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build and Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures a full clone for accurate analysis

      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'  # Other options: zulu, adopt, etc.

      # Step 3: Cache SonarCloud packages
      - name: Cache SonarCloud Packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Step 4: Cache Maven dependencies
      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 5: Build and Analyze with SonarCloud
      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required for PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=ayush1452_userapi \
            -Dsonar.organization=ayush1452 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # Step 6: Run OWASP Dependency-Check
      - name: OWASP Dependency-Check
        run: |
          rm -rf $(pwd)/odc-data
          docker run --rm \
            -v $(pwd):/src \
            -v $(pwd)/odc-data:/usr/share/dependency-check/data \
            -v $(pwd)/odc-reports:/report \
            owasp/dependency-check \
            --project userapi \
            --scan /src \
            --format HTML \
            --out /report

      # Step 7: Upload Dependency-Check Report
      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: odc-reports/dependency-check-report.html
